'number' + 3 + 3
// усі елементи будут приведені до строки, результат строка 'number33'

null + 3
// null стає числом 0, результат 3

5 && "qwerty"
/* логічний оператор ТА повернає перше false значення, якщо обидва значення true як в цьому випадку (непустий рядок та число), 
то повертається останній true елемент, результат рядок "qwerty" */

+'40' + +'2' + "hillel";
/* рядок  "40" приведений до числа унарним +, до нього додається рядок "2" приведений до числа унарним + - маємо число 42, 
додаючи останній рядок усе буде приведене до рядку, результат рядок '42hillel' */

'10' - 5 === 6;
/* В операції рядок мінус число результат будет приведений до числа 5, 
в строгому порівнянні число 5 не равно числу 6, результат false  */


true + false
// через бінарний + true стає числом 1, false стає числом 0, результат число 1

'4px' - 3
/* рядок, в якому окрім числа є інші символи, не може бути приведений до числа, операція складення неможлива, 
таким чином результат операції NaN */

'4' - 3
//в операції віднімання рядок стає числом 4, результат число 1

'6' + 3 ** 0;
//перша операція виконується справа - возведення в ступінь 3 ** 0 = 1, складення з рядком приведе результат до рядка - '61'

12 / '6'
// при діленні рядок стає числом, результат число 2

'10' + (5 === 6);
//перша операція - строге порівняння 5===6 з результатом false, додавання рядка приведе все до результату рядок '10false'

null == ''
/* при несторогому порівнянні null (та undefined) дорівнюють один одному та нічому іншому, 
пустий рядок буде false приведений до числа 0 для порівняння, результат кінцевого порівняння null та 0 - false */  

3 ** (9 / 3);
/* операція в дужках має вищий пріоритет, тому виконаеться першою з результатом 3, далі возведення числа 3 в ступінь 3, результат число 27 */

!!'false' == !!'true'
/* !! приводить до логичного типу данніх, непустий рядок має значення true, 
тож нестроге порівняння двох непустих рядків буде мати результат true */

0 || '0' && 1
/* приорітет ТА(&&) вищий за АБО (||), перша операція - '0' && 1 приведе усе до логичного типу данних - непустій рядок = true, число 1 = true, 
та поверне останный тру елемент - число 1. Наступна операція  0 || 1 поверне перше тру значення, це число 1, бо 0 завжди false. 
Кінцевий результат - число 1 */

(+null == false) < 1;
/* null с унарним + стає числом 0, для порівняння 0 та false, false стає числом 0, результат порівняння true,
яке далі стає числом 1 для виконання операції порівняння. Результат операції порівняння 1 < 1 = false */

false && true || true
/* перша операція - &&, повертає false (перше false значення), друга операція || поверне перше true значення:
 false || true = true */

false && (false || true);
/* перша операція буде виконана в дужках - false || true, поверне перше true, далі  false &&  true , поверне перше false,
кінцевий результат - false  */

(+null == false) < 1 ** 5;
/* перша операція в дужках null приведений до 0, для порівняння 0 та false, false стає числом 0, результат порівняння true,
яке далі стає числом 1, число один возведене в 5 ступінь = 1, кінцеве порівняння невірне:
1 < 1 = false */